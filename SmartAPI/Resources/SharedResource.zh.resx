<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="apidata_name_valid_empty" xml:space="preserve">
    <value>名称不能为空</value>
  </data>
  <data name="apidata_name_valid_len" xml:space="preserve">
    <value>名称的长度不能大于40</value>
  </data>
  <data name="apidata_category_valid_empty" xml:space="preserve">
    <value>类别名称不能为空</value>
  </data>
  <data name="run_00" xml:space="preserve">
    <value>开始全流程构建……</value>
  </data>
  <data name="run_01" xml:space="preserve">
    <value>开始代码上传……</value>
  </data>
  <data name="run_02" xml:space="preserve">
    <value>代码上传成功！</value>
  </data>
  <data name="run_03" xml:space="preserve">
    <value>开始部署代码，请给我一点时间……</value>
  </data>
  <data name="run_04" xml:space="preserve">
    <value>创建函数{0}成功！</value>
  </data>
  <data name="run_05" xml:space="preserve">
    <value>开始启动服务……</value>
  </data>
  <data name="run_06" xml:space="preserve">
    <value>启动服务{0}成功！</value>
  </data>
  <data name="run_07" xml:space="preserve">
    <value>开始访问服务……</value>
  </data>
  <data name="run_08" xml:space="preserve">
    <value>访问服务{0}成功</value>
  </data>
  <data name="run_09" xml:space="preserve">
    <value>服务返回数据：</value>
  </data>
  <data name="run_99" xml:space="preserve">
    <value>结束全流程构建！</value>
  </data>
  <data name="run_err_01" xml:space="preserve">
    <value>代码上传失败！请重新运行！</value>
  </data>
  <data name="run_err_02" xml:space="preserve">
    <value>创建函数{0}失败！请重新运行！</value>
  </data>
  <data name="run_err_03" xml:space="preserve">
    <value>设置函数{0}权限失败！请重新运行！</value>
  </data>
  <data name="run_err_04" xml:space="preserve">
    <value>访问服务{0}失败！请重新生成代码并运行！</value>
  </data>
  <data name="apidata_category_valid_len" xml:space="preserve">
    <value>类别名称不能大于40位</value>
  </data>
  <data name="apidata_productid_valid_empty" xml:space="preserve">
    <value>产品ID不能为空</value>
  </data>
  <data name="apidata_serialnumber_valid_empty" xml:space="preserve">
    <value>序号不能为空</value>
  </data>
  <data name="apidata_parentid_valid_empty" xml:space="preserve">
    <value>父ID不能为空，最顶级请用0</value>
  </data>
  <data name="product_name_valid_empty" xml:space="preserve">
    <value>产品名称不能为空</value>
  </data>
  <data name="product_name_valid_len" xml:space="preserve">
    <value>产品名称不能超过40</value>
  </data>
  <data name="product_version_valid_empty" xml:space="preserve">
    <value>版本号不能为空</value>
  </data>
  <data name="product_version_valid_len" xml:space="preserve">
    <value>版本号长度不能超过40</value>
  </data>
  <data name="product_sceneid_valid_empty" xml:space="preserve">
    <value>场景ID不能为空</value>
  </data>
  <data name="customint_companname_valid_empty" xml:space="preserve">
    <value>公司名称不能为空</value>
  </data>
  <data name="customint_companname_valid_len" xml:space="preserve">
    <value>公司名称不能超过250位</value>
  </data>
  <data name="customint_responsibleperson_valid_empty" xml:space="preserve">
    <value>营业担当名称不能为空</value>
  </data>
  <data name="customint_responsibleperson_valid_len" xml:space="preserve">
    <value>营业担当名称不能大于250</value>
  </data>
  <data name="customint_responsibleemail_valid_empty" xml:space="preserve">
    <value>担当Email不能为空</value>
  </data>
  <data name="customint_responsibleemail_valid_len" xml:space="preserve">
    <value>担当Email不能大于120</value>
  </data>
  <data name="customint_responsibleemail_valid_format" xml:space="preserve">
    <value>担当者邮箱格式不正确</value>
  </data>
  <data name="cusomerinfo_salespersonemail_valid_empty" xml:space="preserve">
    <value>销售邮箱格式不正确</value>
  </data>
  <data name="cusomerinfo_salespersonemail_valid_len" xml:space="preserve">
    <value>销售Email不能大于128</value>
  </data>
  <data name="cusomerinfo_devemail_valid_empty" xml:space="preserve">
    <value>开发者邮箱不正确</value>
  </data>
  <data name="cusomerinfo_devemail_valid_len" xml:space="preserve">
    <value>开发者邮箱不能大于128</value>
  </data>
  <data name="customerinfo_nssemail_valid_empty" xml:space="preserve">
    <value>nss营业邮箱不能为空</value>
  </data>
  <data name="customerinfo_nssemail_valid_len" xml:space="preserve">
    <value>nss营业邮箱长度不能超过120</value>
  </data>
  <data name="customerinfo_nssemail_valid_format" xml:space="preserve">
    <value>nss营业邮箱格式不正确</value>
  </data>
  <data name="customerinfo_scene_valid_empty" xml:space="preserve">
    <value>使用场景不能为空</value>
  </data>
  <data name="culture" xml:space="preserve">
    <value>中文</value>
  </data>
  <data name="scene_error" xml:space="preserve">
    <value>场景错误</value>
  </data>
</root>